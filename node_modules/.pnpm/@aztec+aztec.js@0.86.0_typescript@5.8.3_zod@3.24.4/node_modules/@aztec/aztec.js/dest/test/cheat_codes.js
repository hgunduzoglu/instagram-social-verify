import { EthCheatCodes } from '@aztec/ethereum/eth-cheatcodes';
import { AztecCheatCodes } from './aztec_cheat_codes.js';
import { RollupCheatCodes } from './rollup_cheat_codes.js';
/**
 * A class that provides utility functions for interacting with the chain.
 */ export class CheatCodes {
    eth;
    aztec;
    rollup;
    constructor(/** Cheat codes for L1.*/ eth, /** Cheat codes for Aztec L2. */ aztec, /** Cheat codes for the Aztec Rollup contract on L1. */ rollup){
        this.eth = eth;
        this.aztec = aztec;
        this.rollup = rollup;
    }
    static async create(rpcUrls, pxe) {
        const ethCheatCodes = new EthCheatCodes(rpcUrls);
        const aztecCheatCodes = new AztecCheatCodes(pxe);
        const rollupCheatCodes = new RollupCheatCodes(ethCheatCodes, await pxe.getNodeInfo().then((n)=>n.l1ContractAddresses));
        return new CheatCodes(ethCheatCodes, aztecCheatCodes, rollupCheatCodes);
    }
    static createRollup(rpcUrls, addresses) {
        const ethCheatCodes = new EthCheatCodes(rpcUrls);
        return new RollupCheatCodes(ethCheatCodes, addresses);
    }
}
