import { DeploySentTx } from './deploy_sent_tx.js';
import { ProvenTx } from './proven_tx.js';
/**
 * A proven transaction that can be sent to the network. Returned by the `prove` method of a contract deployment.
 */ export class DeployProvenTx extends ProvenTx {
    postDeployCtor;
    instanceGetter;
    constructor(wallet, tx, postDeployCtor, instanceGetter){
        super(wallet, tx), this.postDeployCtor = postDeployCtor, this.instanceGetter = instanceGetter;
    }
    /**
   * Sends the transaction to the network via the provided wallet.
   */ send() {
        const promise = (()=>{
            return this.wallet.sendTx(this.getPlainDataTx());
        })();
        return new DeploySentTx(this.wallet, promise, this.postDeployCtor, this.instanceGetter);
    }
}
