import { DefaultEntrypoint } from '@aztec/entrypoints/default';
import { BaseWallet } from './base_wallet.js';
/**
 * Wallet implementation which creates a transaction request directly to the requested contract without any signing.
 */ export class SignerlessWallet extends BaseWallet {
    entrypoint;
    constructor(pxe, entrypoint){
        super(pxe), this.entrypoint = entrypoint;
    }
    async createTxExecutionRequest(execution, fee, options) {
        let entrypoint = this.entrypoint;
        if (!entrypoint) {
            const { l1ChainId: chainId, rollupVersion } = await this.pxe.getNodeInfo();
            entrypoint = new DefaultEntrypoint(chainId, rollupVersion);
        }
        return entrypoint.createTxExecutionRequest(execution, fee, options);
    }
    getChainId() {
        throw new Error('SignerlessWallet: Method getChainId not implemented.');
    }
    getVersion() {
        throw new Error('SignerlessWallet: Method getVersion not implemented.');
    }
    getPublicKeysHash() {
        throw new Error('SignerlessWallet: Method getPublicKeysHash not implemented.');
    }
    getCompleteAddress() {
        throw new Error('SignerlessWallet: Method getCompleteAddress not implemented.');
    }
    createAuthWit(_intent) {
        throw new Error('SignerlessWallet: Method createAuthWit not implemented.');
    }
}
