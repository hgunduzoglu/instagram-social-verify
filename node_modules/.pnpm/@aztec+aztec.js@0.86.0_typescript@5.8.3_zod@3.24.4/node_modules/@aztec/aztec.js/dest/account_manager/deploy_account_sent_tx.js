import { DefaultWaitOpts, SentTx } from '../contract/sent_tx.js';
/**
 * A deployment transaction for an account contract sent to the network, extending SentTx with methods to get the resulting wallet.
 */ export class DeployAccountSentTx extends SentTx {
    getWalletPromise;
    constructor(pxeOrNode, txHashPromise, getWalletPromise){
        super(pxeOrNode, txHashPromise), this.getWalletPromise = getWalletPromise;
    }
    /**
   * Awaits for the tx to be mined and returns the contract instance. Throws if tx is not mined.
   * @param opts - Options for configuring the waiting for the tx to be mined.
   * @returns The deployed contract instance.
   */ async getWallet(opts) {
        const receipt = await this.wait(opts);
        return receipt.wallet;
    }
    /**
   * Awaits for the tx to be mined and returns the receipt along with a wallet instance. Throws if tx is not mined.
   * @param opts - Options for configuring the waiting for the tx to be mined.
   * @returns The transaction receipt with the wallet for the deployed account contract.
   */ async wait(opts = DefaultWaitOpts) {
        const receipt = await super.wait(opts);
        const wallet = await this.getWalletPromise;
        return {
            ...receipt,
            wallet
        };
    }
}
