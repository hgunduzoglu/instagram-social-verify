import { isAsyncIterable } from './isAsyncIt.js';
function take(source, limit) {
    if (isAsyncIterable(source)) {
        return async function*() {
            let items = 0;
            if (limit < 1) {
                return;
            }
            for await (const entry of source){
                yield entry;
                items++;
                if (items === limit) {
                    return;
                }
            }
        }();
    }
    return function*() {
        let items = 0;
        if (limit < 1) {
            return;
        }
        for (const entry of source){
            yield entry;
            items++;
            if (items === limit) {
                return;
            }
        }
    }();
}
export { take };
