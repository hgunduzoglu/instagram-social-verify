/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { sha256Trunc } from '../crypto/sha256/index.js';
/**
 * Computes the merkle root for an unbalanced tree.
 *
 * @dev Adapted from unbalanced_tree.ts.
 * Calculates the tree upwards layer by layer until we reach the root.
 * The L1 calculation instead computes the tree from right to left (slightly cheaper gas).
 * TODO: A more thorough investigation of which method is cheaper, then use that method everywhere.
 */
export declare function computeUnbalancedMerkleRoot(leaves: Buffer[], emptyLeaf?: Buffer, hasher?: typeof sha256Trunc): Buffer;
export declare function findLeafLevelAndIndex(numLeaves: number, leafIndex: number): {
    level: number;
    indexAtLevel: number;
};
//# sourceMappingURL=unbalanced_merkle_tree.d.ts.map