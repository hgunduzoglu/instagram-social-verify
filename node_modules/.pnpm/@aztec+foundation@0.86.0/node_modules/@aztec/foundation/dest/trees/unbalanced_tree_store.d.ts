export interface TreeNodeLocation {
    level: number;
    index: number;
}
export declare class UnbalancedTreeStore<T> {
    #private;
    constructor(numLeaves: number);
    setLeaf(leafIndex: number, value: T): TreeNodeLocation;
    setNode({ level, index }: TreeNodeLocation, value: T): void;
    getParentLocation({ level, index }: TreeNodeLocation): TreeNodeLocation;
    getSiblingLocation({ level, index }: TreeNodeLocation): TreeNodeLocation;
    getChildLocations({ level, index }: TreeNodeLocation): [TreeNodeLocation, TreeNodeLocation];
    getLeaf(leafIndex: number): T | undefined;
    getNode(location: TreeNodeLocation): T | undefined;
    getParent(location: TreeNodeLocation): T | undefined;
    getSibling(location: TreeNodeLocation): T | undefined;
    getChildren(location: TreeNodeLocation): [T | undefined, T | undefined];
}
//# sourceMappingURL=unbalanced_tree_store.d.ts.map