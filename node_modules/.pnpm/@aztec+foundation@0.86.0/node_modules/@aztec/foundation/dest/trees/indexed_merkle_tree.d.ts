/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import type { IndexedTreeLeafPreimage } from './indexed_tree_leaf.js';
import { MembershipWitness } from './membership_witness.js';
import { MerkleTree } from './merkle_tree.js';
/** A simple immutable indexed merkle tree container. Use a IndexedMerkleTreeCalculator to create a new instance from a set of leaves. */
export declare class IndexedMerkleTree<T extends IndexedTreeLeafPreimage, N extends number> extends MerkleTree {
    readonly leafPreimages: T[];
    constructor(height: N, nodes: Buffer[], leafPreimages: T[]);
    getLowLeaf(value: bigint): T;
    getMembershipWitness(leafIndexOrLeaf: number | Buffer): MembershipWitness<N>;
}
//# sourceMappingURL=indexed_merkle_tree.d.ts.map