export function hasHexPrefix(str) {
    return str.startsWith('0x');
}
export function withoutHexPrefix(str) {
    return hasHexPrefix(str) ? str.slice(2) : str;
}
export function isHex(str) {
    return /^(0x)?[0-9a-fA-F]*$/.test(str);
}
export function hexToBuffer(str) {
    return Buffer.from(withoutHexPrefix(str), 'hex');
}
export function bufferToHex(buffer) {
    return `0x${buffer.toString('hex')}`;
}
export function pluralize(str, count, plural) {
    return count === 1 || count === 1n ? str : plural ?? `${str}s`;
}
export function count(count, str, plural) {
    return `${count} ${pluralize(str, count, plural)}`;
}
export function truncate(str, length = 64) {
    return str.length > length ? str.slice(0, length) + '...' : str;
}
