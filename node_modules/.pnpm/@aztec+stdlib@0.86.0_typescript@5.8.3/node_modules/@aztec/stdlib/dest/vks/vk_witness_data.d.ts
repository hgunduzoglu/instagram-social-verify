/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { VK_TREE_HEIGHT } from '@aztec/constants';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, type Tuple } from '@aztec/foundation/serialize';
import type { UInt32 } from '../types/shared.js';
import { VerificationKeyData } from './verification_key.js';
export declare class VkWitnessData {
    vk: VerificationKeyData;
    /**
     * Index of the vk in the vk tree.
     */
    vkIndex: UInt32;
    /**
     * Sibling path of the vk in the vk tree.
     */
    vkPath: Tuple<Fr, typeof VK_TREE_HEIGHT>;
    constructor(vk: VerificationKeyData, 
    /**
     * Index of the vk in the vk tree.
     */
    vkIndex: UInt32, 
    /**
     * Sibling path of the vk in the vk tree.
     */
    vkPath: Tuple<Fr, typeof VK_TREE_HEIGHT>);
    static empty(): VkWitnessData;
    static fromBuffer(buffer: Buffer | BufferReader): VkWitnessData;
    toBuffer(): Buffer;
    toString(): `0x${string}`;
}
//# sourceMappingURL=vk_witness_data.d.ts.map