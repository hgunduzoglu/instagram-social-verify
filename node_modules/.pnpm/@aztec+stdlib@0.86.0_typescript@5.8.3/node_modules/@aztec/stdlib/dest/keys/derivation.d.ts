import { Fq, Fr, GrumpkinScalar } from '@aztec/foundation/fields';
import { AztecAddress } from '../aztec-address/index.js';
import type { CompleteAddress } from '../contract/complete_address.js';
import type { KeyPrefix } from './key_types.js';
import { PublicKeys } from './public_keys.js';
export declare function computeAppNullifierSecretKey(masterNullifierSecretKey: GrumpkinScalar, app: AztecAddress): Promise<Fr>;
export declare function computeAppSecretKey(skM: GrumpkinScalar, app: AztecAddress, keyPrefix: KeyPrefix): Promise<Fr>;
export declare function computeOvskApp(ovsk: GrumpkinScalar, app: AztecAddress): Promise<Fq>;
export declare function deriveMasterNullifierSecretKey(secretKey: Fr): GrumpkinScalar;
export declare function deriveMasterIncomingViewingSecretKey(secretKey: Fr): GrumpkinScalar;
export declare function deriveMasterOutgoingViewingSecretKey(secretKey: Fr): GrumpkinScalar;
export declare function deriveSigningKey(secretKey: Fr): GrumpkinScalar;
export declare function computePreaddress(publicKeysHash: Fr, partialAddress: Fr): Promise<Fr>;
export declare function computeAddress(publicKeys: PublicKeys, partialAddress: Fr): Promise<AztecAddress>;
export declare function computeAddressSecret(preaddress: Fr, ivsk: Fq): Promise<Fq>;
export declare function derivePublicKeyFromSecretKey(secretKey: Fq): Promise<import("@aztec/foundation/fields").Point>;
/**
 * Computes secret and public keys and public keys hash from a secret key.
 * @param secretKey - The secret key to derive keys from.
 * @returns The derived keys.
 */
export declare function deriveKeys(secretKey: Fr): Promise<{
    masterNullifierSecretKey: Fq;
    masterIncomingViewingSecretKey: Fq;
    masterOutgoingViewingSecretKey: Fq;
    masterTaggingSecretKey: Fq;
    publicKeys: PublicKeys;
}>;
export declare function computeAppTaggingSecret(knownAddress: CompleteAddress, ivsk: Fq, externalAddress: AztecAddress, app: AztecAddress): Promise<Fr>;
//# sourceMappingURL=derivation.d.ts.map