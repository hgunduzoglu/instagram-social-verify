import { randomInt } from '@aztec/foundation/crypto';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
import { AztecAddress } from '../aztec-address/index.js';
/**
 * The recipient of an L2 message.
 */ export class L2Actor {
    recipient;
    version;
    constructor(/**
     * The recipient of the message.
     */ recipient, /**
     * The version of the protocol.
     */ version){
        this.recipient = recipient;
        this.version = version;
    }
    static empty() {
        return new L2Actor(AztecAddress.ZERO, 0);
    }
    toFields() {
        return [
            this.recipient.toField(),
            new Fr(BigInt(this.version))
        ];
    }
    toBuffer() {
        return serializeToBuffer(this.recipient, this.version);
    }
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        const aztecAddr = AztecAddress.fromBuffer(reader);
        const version = reader.readNumber();
        return new L2Actor(aztecAddr, version);
    }
    static async random() {
        return new L2Actor(await AztecAddress.random(), randomInt(1000));
    }
}
