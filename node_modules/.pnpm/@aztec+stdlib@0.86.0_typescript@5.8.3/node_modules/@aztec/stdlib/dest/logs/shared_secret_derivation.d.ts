import type { GrumpkinScalar, Point } from '@aztec/foundation/fields';
import type { PublicKey } from '../keys/public_key.js';
/**
 * Derive an Elliptic Curve Diffie-Hellman (ECDH) Shared Secret.
 * The function takes in an ECDH public key, a private key, and a Grumpkin instance to compute
 * the shared secret.
 *
 * @param secretKey - The secret key used to derive shared secret.
 * @param publicKey - The public key used to derive shared secret.
 * @returns A derived shared secret.
 * @throws If the publicKey is zero.
 *
 * TODO(#12656): This function is kept around because of the getSharedSecret oracle. Nuke this once returning
 * the app-siloed secret.
 */
export declare function deriveEcdhSharedSecret(secretKey: GrumpkinScalar, publicKey: PublicKey): Promise<Point>;
//# sourceMappingURL=shared_secret_derivation.d.ts.map