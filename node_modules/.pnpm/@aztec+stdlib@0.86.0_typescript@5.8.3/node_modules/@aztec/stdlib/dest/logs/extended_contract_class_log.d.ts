/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import type { ZodFor } from '@aztec/foundation/schemas';
import { BufferReader } from '@aztec/foundation/serialize';
import type { FieldsOf } from '@aztec/foundation/types';
import { ContractClassLog } from './contract_class_log.js';
import { LogId } from './log_id.js';
/**
 * Represents an individual contract class log entry extended with info about the block and tx it was emitted in.
 */
export declare class ExtendedContractClassLog {
    /** Globally unique id of the log. */
    readonly id: LogId;
    /** The data contents of the log. */
    readonly log: ContractClassLog;
    constructor(
    /** Globally unique id of the log. */
    id: LogId, 
    /** The data contents of the log. */
    log: ContractClassLog);
    static random(): Promise<ExtendedContractClassLog>;
    static get schema(): ZodFor<ExtendedContractClassLog>;
    static from(fields: FieldsOf<ExtendedContractClassLog>): ExtendedContractClassLog;
    /**
     * Serializes log to a buffer.
     * @returns A buffer containing the serialized log.
     */
    toBuffer(): Buffer;
    /**
     * Serializes log to a string.
     * @returns A string containing the serialized log.
     */
    toString(): string;
    /**
     * Checks if two ExtendedContractClassLog objects are equal.
     * @param other - Another ExtendedContractClassLog object to compare with.
     * @returns True if the two objects are equal, false otherwise.
     */
    equals(other: ExtendedContractClassLog): boolean;
    /**
     * Deserializes log from a buffer.
     * @param buffer - The buffer or buffer reader containing the log.
     * @returns Deserialized instance of `Log`.
     */
    static fromBuffer(buffer: Buffer | BufferReader): ExtendedContractClassLog;
    /**
     * Deserializes `ExtendedContractClassLog` object from a hex string representation.
     * @param data - A hex string representation of the log.
     * @returns An `ExtendedContractClassLog` object.
     */
    static fromString(data: string): ExtendedContractClassLog;
}
//# sourceMappingURL=extended_contract_class_log.d.ts.map