import type { L2Block } from '../l2_block.js';
import type { L2BlockId, L2BlockTag, L2Tips } from '../l2_block_source.js';
import type { L2BlockStreamEvent, L2BlockStreamEventHandler, L2BlockStreamLocalDataProvider } from './interfaces.js';
/**
 * Stores currently synced L2 tips and unfinalized block hashes.
 * @dev tests in kv-store/src/stores/l2_tips_memory_store.test.ts
 */
export declare class L2TipsMemoryStore implements L2BlockStreamEventHandler, L2BlockStreamLocalDataProvider {
    protected readonly l2TipsStore: Map<L2BlockTag, number>;
    protected readonly l2BlockHashesStore: Map<number, string>;
    getL2BlockHash(number: number): Promise<string | undefined>;
    getL2Tips(): Promise<L2Tips>;
    private getL2Tip;
    handleBlockStreamEvent(event: L2BlockStreamEvent): Promise<void>;
    protected saveTag(name: L2BlockTag, block: L2BlockId): void;
    protected computeBlockHash(block: L2Block): Promise<`0x${string}`>;
}
//# sourceMappingURL=l2_tips_memory_store.d.ts.map