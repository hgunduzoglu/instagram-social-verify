import { z } from 'zod';
/** Creates an L2 block id */ export function makeL2BlockId(number, hash) {
    if (number !== 0 && !hash) {
        throw new Error(`Hash is required for non-genesis blocks (got block number ${number})`);
    }
    return {
        number,
        hash: hash
    };
}
// TODO(palla/schemas): This package should know what is the block hash of the genesis block 0.
const L2BlockIdSchema = z.union([
    z.object({
        number: z.literal(0),
        hash: z.undefined()
    }),
    z.object({
        number: z.number(),
        hash: z.string()
    })
]);
export const L2TipsSchema = z.object({
    latest: L2BlockIdSchema,
    proven: L2BlockIdSchema,
    finalized: L2BlockIdSchema
});
export var L2BlockSourceEvents = /*#__PURE__*/ function(L2BlockSourceEvents) {
    L2BlockSourceEvents["L2PruneDetected"] = "l2PruneDetected";
    return L2BlockSourceEvents;
}({});
