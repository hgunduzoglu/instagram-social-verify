/**
 * Defines the possible Merkle tree IDs.
 * @remarks The MerkleTrees class expects these to start from zero and be in incremental order.
 */
export declare enum MerkleTreeId {
    NULLIFIER_TREE = 0,// 0
    NOTE_HASH_TREE = 1,// 1
    PUBLIC_DATA_TREE = 2,// 2
    L1_TO_L2_MESSAGE_TREE = 3,// 3
    ARCHIVE = 4
}
export declare const merkleTreeIds: () => MerkleTreeId[];
declare const TREE_HEIGHTS: {
    readonly 1: 40;
    readonly 4: 29;
    readonly 3: 39;
    readonly 0: 40;
    readonly 2: 40;
};
export type TreeHeights = typeof TREE_HEIGHTS;
export declare function getTreeHeight<TID extends MerkleTreeId>(treeId: TID): TreeHeights[TID];
declare const TREE_NAMES: {
    readonly 0: "NULLIFIER_TREE";
    readonly 1: "NOTE_HASH_TREE";
    readonly 2: "PUBLIC_DATA_TREE";
    readonly 3: "L1_TO_L2_MESSAGE_TREE";
    readonly 4: "ARCHIVE";
};
export declare function getTreeName<TID extends MerkleTreeId>(treeId: TID): (typeof TREE_NAMES)[TID];
export {};
//# sourceMappingURL=merkle_tree_id.d.ts.map