import type { EthAddress } from '@aztec/foundation/eth-address';
import type { Fr } from '@aztec/foundation/fields';
import type Koa from 'koa';
import type { ChainConfig } from '../config/config.js';
/** Fields that identify a version of the Aztec protocol. Any mismatch between these fields should signal an incompatibility between nodes. */
export type ComponentsVersions = {
    l1ChainId: number;
    l1RollupAddress: EthAddress;
    rollupVersion: number;
    l2ProtocolContractsTreeRoot: string;
    l2CircuitsVkTreeRoot: string;
};
/** Returns components versions from chain config. */
export declare function getComponentsVersionsFromConfig(config: ChainConfig, l2ProtocolContractsTreeRoot: string | Fr, l2CircuitsVkTreeRoot: string | Fr): ComponentsVersions;
/** Returns a compressed string representation of the version (around 32 chars). Used in p2p ENRs. */
export declare function compressComponentVersions(versions: ComponentsVersions): string;
export declare class ComponentsVersionsError extends Error {
    constructor(key: string, expected: string, value: string);
}
/** Checks if the compressed string matches against the expected versions. Throws on mismatch. */
export declare function checkCompressedComponentVersion(compressed: string, expected: ComponentsVersions): void;
/** Checks that two component versions match. Undefined fields are ignored. */
export declare function validatePartialComponentVersionsMatch(expected: Partial<ComponentsVersions>, actual: Partial<ComponentsVersions>): void;
/** Returns a Koa middleware that injects the versioning info as headers. */
export declare function getVersioningMiddleware(versions: Partial<ComponentsVersions>): (ctx: Koa.Context, next: () => Promise<void>) => Promise<void>;
/** Returns a json rpc client handler that rejects responses with mismatching versions. */
export declare function getVersioningResponseHandler(versions: Partial<ComponentsVersions>): ({ headers }: {
    headers: {
        get: (header: string) => string | null | undefined;
    };
}) => Promise<void>;
//# sourceMappingURL=versioning.d.ts.map