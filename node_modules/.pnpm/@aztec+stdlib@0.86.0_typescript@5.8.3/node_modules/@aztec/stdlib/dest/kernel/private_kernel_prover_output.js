import { bufferSchema, mapSchema } from '@aztec/foundation/schemas';
import { serializeWitness } from '@aztec/noir-noirc_abi';
import { Encoder } from 'msgpackr';
import { z } from 'zod';
export const PrivateExecutionStepSchema = z.object({
    functionName: z.string(),
    gateCount: z.number().optional(),
    bytecode: bufferSchema,
    witness: mapSchema(z.number(), z.string()),
    vk: bufferSchema
});
export function serializePrivateExecutionSteps(steps) {
    const stepToStruct = (step)=>{
        return {
            bytecode: step.bytecode,
            witness: serializeWitness(step.witness),
            vk: step.vk,
            functionName: step.functionName
        };
    };
    return new Encoder({
        useRecords: false
    }).pack(steps.map(stepToStruct));
}
