import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
import { KeyValidationHint } from './key_validation_hint.js';
import { noteHashReadRequestHintsFromBuffer } from './note_hash_read_request_hints.js';
import { nullifierReadRequestHintsFromBuffer } from './nullifier_read_request_hints.js';
import { TransientDataIndexHint } from './transient_data_index_hint.js';
export class PrivateKernelResetHints {
    noteHashReadRequestHints;
    nullifierReadRequestHints;
    keyValidationHints;
    transientDataIndexHints;
    validationRequestsSplitCounter;
    constructor(/**
     * Contains hints for the transient read requests to localize corresponding commitments.
     */ noteHashReadRequestHints, /**
     * Contains hints for the nullifier read requests to locate corresponding pending or settled nullifiers.
     */ nullifierReadRequestHints, /**
     * Contains hints for key validation request.
     */ keyValidationHints, /**
     * Contains hints for the transient note hashes to locate corresponding nullifiers.
     */ transientDataIndexHints, /**
     * The "final" minRevertibleSideEffectCounter of a tx, to split the data for squashing.
     * Not the minRevertibleSideEffectCounter at the point the reset circuit is run.
     */ validationRequestsSplitCounter){
        this.noteHashReadRequestHints = noteHashReadRequestHints;
        this.nullifierReadRequestHints = nullifierReadRequestHints;
        this.keyValidationHints = keyValidationHints;
        this.transientDataIndexHints = transientDataIndexHints;
        this.validationRequestsSplitCounter = validationRequestsSplitCounter;
    }
    toBuffer() {
        return serializeToBuffer(this.noteHashReadRequestHints, this.nullifierReadRequestHints, this.keyValidationHints, this.transientDataIndexHints, this.validationRequestsSplitCounter);
    }
    trimToSizes(numNoteHashReadRequestPending, numNoteHashReadRequestSettled, numNullifierReadRequestPending, numNullifierReadRequestSettled, numKeyValidationRequests, numTransientDataIndexHints) {
        return new PrivateKernelResetHints(this.noteHashReadRequestHints.trimToSizes(numNoteHashReadRequestPending, numNoteHashReadRequestSettled), this.nullifierReadRequestHints.trimToSizes(numNullifierReadRequestPending, numNullifierReadRequestSettled), this.keyValidationHints.slice(0, numKeyValidationRequests), this.transientDataIndexHints.slice(0, numTransientDataIndexHints), this.validationRequestsSplitCounter);
    }
    /**
   * Deserializes from a buffer or reader.
   * @param buffer - Buffer or reader to read from.
   * @returns The deserialized instance.
   */ static fromBuffer(buffer, numNoteHashReadRequestPending, numNoteHashReadRequestSettled, numNullifierReadRequestPending, numNullifierReadRequestSettled, numNullifierKeys, numTransientDataIndexHints) {
        const reader = BufferReader.asReader(buffer);
        return new PrivateKernelResetHints(reader.readObject({
            fromBuffer: (buf)=>noteHashReadRequestHintsFromBuffer(buf, numNoteHashReadRequestPending, numNoteHashReadRequestSettled)
        }), reader.readObject({
            fromBuffer: (buf)=>nullifierReadRequestHintsFromBuffer(buf, numNullifierReadRequestPending, numNullifierReadRequestSettled)
        }), reader.readArray(numNullifierKeys, KeyValidationHint), reader.readArray(numTransientDataIndexHints, TransientDataIndexHint), reader.readNumber());
    }
}
