import { serializeToFields } from '@aztec/foundation/serialize';
import { BlockHeader } from '../tx/block_header.js';
import { CallContext } from '../tx/call_context.js';
import { TxContext } from '../tx/tx_context.js';
export class PrivateContextInputs {
    callContext;
    historicalHeader;
    txContext;
    startSideEffectCounter;
    constructor(callContext, historicalHeader, txContext, startSideEffectCounter){
        this.callContext = callContext;
        this.historicalHeader = historicalHeader;
        this.txContext = txContext;
        this.startSideEffectCounter = startSideEffectCounter;
    }
    static empty() {
        return new PrivateContextInputs(CallContext.empty(), BlockHeader.empty(), TxContext.empty(), 0);
    }
    toFields() {
        return serializeToFields([
            this.callContext,
            this.historicalHeader,
            this.txContext,
            this.startSideEffectCounter
        ]);
    }
}
