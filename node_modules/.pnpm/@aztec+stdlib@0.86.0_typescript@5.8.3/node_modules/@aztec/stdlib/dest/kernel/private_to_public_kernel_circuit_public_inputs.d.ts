/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import type { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import type { FieldsOf } from '@aztec/foundation/types';
import { AztecAddress } from '../aztec-address/index.js';
import { Gas } from '../gas/gas.js';
import { TxConstantData } from '../tx/tx_constant_data.js';
import { RollupValidationRequests } from './hints/rollup_validation_requests.js';
import { PrivateToPublicAccumulatedData } from './private_to_public_accumulated_data.js';
import { PublicCallRequest } from './public_call_request.js';
export declare class PrivateToPublicKernelCircuitPublicInputs {
    constants: TxConstantData;
    rollupValidationRequests: RollupValidationRequests;
    nonRevertibleAccumulatedData: PrivateToPublicAccumulatedData;
    revertibleAccumulatedData: PrivateToPublicAccumulatedData;
    publicTeardownCallRequest: PublicCallRequest;
    gasUsed: Gas;
    feePayer: AztecAddress;
    constructor(constants: TxConstantData, rollupValidationRequests: RollupValidationRequests, nonRevertibleAccumulatedData: PrivateToPublicAccumulatedData, revertibleAccumulatedData: PrivateToPublicAccumulatedData, publicTeardownCallRequest: PublicCallRequest, gasUsed: Gas, feePayer: AztecAddress);
    toBuffer(): Buffer;
    static getFields(fields: FieldsOf<PrivateToPublicKernelCircuitPublicInputs>): readonly [TxConstantData, RollupValidationRequests, PrivateToPublicAccumulatedData, PrivateToPublicAccumulatedData, PublicCallRequest, Gas, AztecAddress];
    static fromBuffer(buffer: Buffer | BufferReader): PrivateToPublicKernelCircuitPublicInputs;
    static empty(): PrivateToPublicKernelCircuitPublicInputs;
    static fromString(str: string): PrivateToPublicKernelCircuitPublicInputs;
    toString(): `0x${string}`;
    toFields(): Fr[];
    hash(): Promise<Fr>;
}
//# sourceMappingURL=private_to_public_kernel_circuit_public_inputs.d.ts.map