import { z } from 'zod';
import { BlockAttestation } from '../p2p/block_attestation.js';
import { optional, schemas } from '../schemas/index.js';
import { Tx } from '../tx/tx.js';
const PeerInfoSchema = z.discriminatedUnion('status', [
    z.object({
        status: z.literal('connected'),
        score: z.number(),
        id: z.string()
    }),
    z.object({
        status: z.literal('dialing'),
        dialStatus: z.string(),
        id: z.string(),
        addresses: z.array(z.string())
    }),
    z.object({
        status: z.literal('cached'),
        id: z.string(),
        addresses: z.array(z.string()),
        enr: z.string(),
        dialAttempts: z.number()
    })
]);
export const P2PApiSchema = {
    getAttestationsForSlot: z.function().args(schemas.BigInt, optional(z.string())).returns(z.array(BlockAttestation.schema)),
    getPendingTxs: z.function().returns(z.array(Tx.schema)),
    getEncodedEnr: z.function().returns(z.string().optional()),
    getPeers: z.function().args(optional(z.boolean())).returns(z.array(PeerInfoSchema)),
    addAttestation: z.function().args(BlockAttestation.schema).returns(z.void())
};
