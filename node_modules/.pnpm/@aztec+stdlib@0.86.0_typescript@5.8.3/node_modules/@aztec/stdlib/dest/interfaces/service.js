/** Tries to call stop on a given object and awaits it. Logs any errors and does not rethrow. */ export async function tryStop(service, logger) {
    try {
        return typeof service === 'object' && service && 'stop' in service && typeof service.stop === 'function' ? await service.stop() : Promise.resolve();
    } catch (err) {
        logger?.error(`Error stopping service ${service.constructor?.name}: ${err}`);
    }
}
export function tryRestart(service, logger) {
    try {
        return typeof service === 'object' && service && 'restart' in service && typeof service.restart === 'function' ? service.restart() : Promise.resolve();
    } catch (err) {
        logger?.error(`Error restarting service ${service.constructor?.name}: ${err}`);
    }
}
