import { defaultFetch } from '@aztec/foundation/json-rpc/client';
import type { ApiSchemaFor } from '../schemas/schemas.js';
import { type ComponentsVersions } from '../versioning/index.js';
import { type SequencerConfig } from './configs.js';
import { type ProverConfig } from './prover-client.js';
/**
 * Aztec node admin API.
 */
export interface AztecNodeAdmin {
    /**
     * Updates the configuration of this node.
     * @param config - Updated configuration to be merged with the current one.
     */
    setConfig(config: Partial<SequencerConfig & ProverConfig & {
        maxTxPoolSize: number;
    }>): Promise<void>;
    /**
     * Forces the next block to be built bypassing all time and pending checks.
     * Useful for testing.
     */
    flushTxs(): Promise<void>;
    /**
     * Pauses syncing, creates a backup of archiver and world-state databases, and uploads them. Returns immediately.
     * @param location - The location to upload the snapshot to.
     */
    startSnapshotUpload(location: string): Promise<void>;
}
export declare const AztecNodeAdminApiSchema: ApiSchemaFor<AztecNodeAdmin>;
export declare function createAztecNodeAdminClient(url: string, versions?: Partial<ComponentsVersions>, fetch?: typeof defaultFetch): AztecNodeAdmin;
//# sourceMappingURL=aztec-node-admin.d.ts.map