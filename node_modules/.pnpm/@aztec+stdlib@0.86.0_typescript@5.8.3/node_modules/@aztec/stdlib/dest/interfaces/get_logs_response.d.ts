import { z } from 'zod';
import { ExtendedContractClassLog } from '../logs/extended_contract_class_log.js';
import { ExtendedPublicLog } from '../logs/extended_public_log.js';
import type { ZodFor } from '../schemas/index.js';
/** Response for the getContractClassLogs archiver call. */
export type GetContractClassLogsResponse = {
    /** An array of ExtendedContractClassLog elements. */
    logs: ExtendedContractClassLog[];
    /** Indicates if a limit has been reached. */
    maxLogsHit: boolean;
};
export declare const GetContractClassLogsResponseSchema: ZodFor<GetContractClassLogsResponse>;
/** Response for the getPublicLogs archiver call. */
export type GetPublicLogsResponse = {
    /** An array of ExtendedPublicLog elements. */
    logs: ExtendedPublicLog[];
    /** Indicates if a limit has been reached. */
    maxLogsHit: boolean;
};
export declare const GetPublicLogsResponseSchema: z.ZodObject<{
    logs: z.ZodArray<z.ZodEffects<z.ZodObject<{
        id: z.ZodEffects<z.ZodObject<{
            blockNumber: z.ZodPipeline<z.ZodUnion<[z.ZodBigInt, z.ZodNumber, z.ZodString]>, z.ZodNumber>;
            txIndex: z.ZodPipeline<z.ZodUnion<[z.ZodBigInt, z.ZodNumber, z.ZodString]>, z.ZodNumber>;
            logIndex: z.ZodPipeline<z.ZodUnion<[z.ZodBigInt, z.ZodNumber, z.ZodString]>, z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            blockNumber: number;
            txIndex: number;
            logIndex: number;
        }, {
            blockNumber: string | number | bigint;
            txIndex: string | number | bigint;
            logIndex: string | number | bigint;
        }>, import("../logs/log_id.js").LogId, {
            blockNumber: string | number | bigint;
            txIndex: string | number | bigint;
            logIndex: string | number | bigint;
        }>;
        log: ZodFor<import("../logs/public_log.js").PublicLog>;
    }, "strip", z.ZodTypeAny, {
        id: import("../logs/log_id.js").LogId;
        log: import("../logs/public_log.js").PublicLog;
    }, {
        id: {
            blockNumber: string | number | bigint;
            txIndex: string | number | bigint;
            logIndex: string | number | bigint;
        };
        log?: any;
    }>, ExtendedPublicLog, {
        id: {
            blockNumber: string | number | bigint;
            txIndex: string | number | bigint;
            logIndex: string | number | bigint;
        };
        log?: any;
    }>, "many">;
    maxLogsHit: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    logs: ExtendedPublicLog[];
    maxLogsHit: boolean;
}, {
    logs: {
        id: {
            blockNumber: string | number | bigint;
            txIndex: string | number | bigint;
            logIndex: string | number | bigint;
        };
        log?: any;
    }[];
    maxLogsHit: boolean;
}>;
//# sourceMappingURL=get_logs_response.d.ts.map