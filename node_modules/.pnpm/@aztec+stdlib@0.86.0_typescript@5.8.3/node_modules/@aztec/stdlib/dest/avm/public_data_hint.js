import { PUBLIC_DATA_TREE_HEIGHT } from '@aztec/constants';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
import { MembershipWitness } from '@aztec/foundation/trees';
import { PublicDataTreeLeafPreimage } from '../trees/index.js';
export class PublicDataHint {
    leafSlot;
    value;
    membershipWitness;
    leafPreimage;
    constructor(leafSlot, value, membershipWitness, leafPreimage){
        this.leafSlot = leafSlot;
        this.value = value;
        this.membershipWitness = membershipWitness;
        this.leafPreimage = leafPreimage;
    }
    static empty() {
        return new PublicDataHint(Fr.ZERO, Fr.ZERO, MembershipWitness.empty(PUBLIC_DATA_TREE_HEIGHT), PublicDataTreeLeafPreimage.empty());
    }
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new PublicDataHint(reader.readObject(Fr), reader.readObject(Fr), MembershipWitness.fromBuffer(reader, PUBLIC_DATA_TREE_HEIGHT), reader.readObject(PublicDataTreeLeafPreimage));
    }
    toBuffer() {
        return serializeToBuffer(this.leafSlot, this.value, this.membershipWitness, this.leafPreimage);
    }
}
