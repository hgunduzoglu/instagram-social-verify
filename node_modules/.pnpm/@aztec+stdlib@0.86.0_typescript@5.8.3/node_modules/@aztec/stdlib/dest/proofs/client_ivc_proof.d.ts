/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { BufferReader } from '@aztec/foundation/serialize';
/**
 * TODO(https://github.com/AztecProtocol/aztec-packages/issues/7370) refactor this to
 * eventually we read all these VKs from the data tree instead of passing them
 */
export declare class ClientIvcProof {
    clientIvcProofBuffer: Buffer;
    constructor(clientIvcProofBuffer: Buffer);
    isEmpty(): boolean;
    static empty(): ClientIvcProof;
    static fake(fill?: number): ClientIvcProof;
    static random(): ClientIvcProof;
    static get schema(): import("zod").ZodType<ClientIvcProof, any, string>;
    toJSON(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): ClientIvcProof;
    toBuffer(): Buffer;
}
//# sourceMappingURL=client_ivc_proof.d.ts.map