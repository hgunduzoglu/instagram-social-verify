/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { AztecAddress } from '../aztec-address/index.js';
/**
 * Read-only data that is passed to the contract through an oracle during a transaction execution.
 * TODO(#12425): Check whether this is always used to represent a transient capsule and if so, rename to
 * TransientCapsule.
 */
export declare class Capsule {
    /** The address of the contract the capsule is for */
    readonly contractAddress: AztecAddress;
    /** The storage slot of the capsule */
    readonly storageSlot: Fr;
    /** Data passed to the contract  */
    readonly data: Fr[];
    constructor(
    /** The address of the contract the capsule is for */
    contractAddress: AztecAddress, 
    /** The storage slot of the capsule */
    storageSlot: Fr, 
    /** Data passed to the contract  */
    data: Fr[]);
    static get schema(): import("zod").ZodType<Capsule, any, string>;
    toJSON(): `0x${string}`;
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): Capsule;
    toString(): `0x${string}`;
    static fromString(str: string): Capsule;
}
//# sourceMappingURL=capsule.d.ts.map