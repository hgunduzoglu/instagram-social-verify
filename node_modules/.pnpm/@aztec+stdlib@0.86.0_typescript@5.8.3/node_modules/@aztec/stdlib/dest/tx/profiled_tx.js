import { z } from 'zod';
import { PrivateExecutionStepSchema } from '../kernel/private_kernel_prover_output.js';
export class TxProfileResult {
    executionSteps;
    constructor(executionSteps){
        this.executionSteps = executionSteps;
    }
    static get schema() {
        return z.object({
            executionSteps: z.array(PrivateExecutionStepSchema)
        }).transform(({ executionSteps })=>new TxProfileResult(executionSteps));
    }
    static random() {
        return new TxProfileResult([
            {
                functionName: 'random',
                bytecode: Buffer.from('random'),
                witness: new Map([
                    [
                        1,
                        'random'
                    ]
                ]),
                vk: Buffer.from('random')
            }
        ]);
    }
}
