import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { schemas } from '../schemas/index.js';
/**
 * A class representing hash of Aztec transaction.
 */ export class TxHash {
    hash;
    constructor(/** A field representing the tx hash (tx hash is an output of poseidon hash hence it's a field). */ hash){
        this.hash = hash;
    }
    static random() {
        return new TxHash(Fr.random());
    }
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new this(reader.readObject(Fr));
    }
    static fromString(str) {
        return new TxHash(Fr.fromString(str));
    }
    static fromBigInt(value) {
        return new TxHash(new Fr(value));
    }
    toBuffer() {
        return this.hash.toBuffer();
    }
    toString() {
        return this.hash.toString();
    }
    toBigInt() {
        return this.hash.toBigInt();
    }
    toJSON() {
        return this.toString();
    }
    equals(other) {
        return this.hash.equals(other.hash);
    }
    static get schema() {
        return schemas.BufferHex.transform((value)=>new TxHash(Fr.fromBuffer(value)));
    }
    static zero() {
        return new TxHash(Fr.ZERO);
    }
    static get SIZE() {
        return Fr.SIZE_IN_BYTES;
    }
}
