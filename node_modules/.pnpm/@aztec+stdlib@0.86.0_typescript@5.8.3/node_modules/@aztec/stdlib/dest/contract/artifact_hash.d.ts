/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { MerkleTree } from '@aztec/foundation/trees';
import { type ContractArtifact, type FunctionArtifact, FunctionSelector, FunctionType } from '../abi/index.js';
/**
 * Returns the artifact hash of a given compiled contract artifact.
 *
 * ```
 * private_functions_artifact_leaves = artifact.private_functions.map fn =>
 *   sha256(fn.selector, fn.metadata_hash, sha256(fn.bytecode))
 * private_functions_artifact_tree_root = merkleize(private_functions_artifact_leaves)
 *
 * utility_functions_artifact_leaves = artifact.utility_functions.map fn =>
 *   sha256(fn.selector, fn.metadata_hash, sha256(fn.bytecode))
 * utility_functions_artifact_tree_root = merkleize(utility_functions_artifact_leaves)
 *
 * version = 1
 * artifact_hash = sha256(
 *   version,
 *   private_functions_artifact_tree_root,
 *   utility_functions_artifact_tree_root,
 *   artifact_metadata,
 * )
 * ```
 * @param artifact - Artifact to calculate the hash for.
 */
export declare function computeArtifactHash(artifact: ContractArtifact | {
    privateFunctionRoot: Fr;
    utilityFunctionRoot: Fr;
    metadataHash: Fr;
}): Promise<Fr>;
export declare function computeArtifactHashPreimage(artifact: ContractArtifact): Promise<{
    privateFunctionRoot: Fr;
    utilityFunctionRoot: Fr;
    metadataHash: Fr;
}>;
export declare function computeArtifactMetadataHash(artifact: ContractArtifact): Fr;
export declare function computeArtifactFunctionTreeRoot(artifact: ContractArtifact, fnType: FunctionType): Promise<Fr>;
export declare function computeArtifactFunctionTree(artifact: ContractArtifact, fnType: FunctionType): Promise<MerkleTree | undefined>;
export declare function computeFunctionArtifactHash(fn: FunctionArtifact | (Pick<FunctionArtifact, 'bytecode'> & {
    functionMetadataHash: Fr;
    selector: FunctionSelector;
})): Promise<Fr>;
export declare function computeFunctionMetadataHash(fn: FunctionArtifact): Fr;
export declare function getArtifactMerkleTreeHasher(): (l: Buffer, r: Buffer) => Promise<Buffer>;
//# sourceMappingURL=artifact_hash.d.ts.map