import type { Fr } from '@aztec/foundation/fields';
import { z } from 'zod';
import type { AztecAddress } from '../../aztec-address/index.js';
import { type ZodFor } from '../../schemas/index.js';
/**
 * An update to a contract instance, changing its contract class.
 */
export interface ContractInstanceUpdate {
    /** Identifier of the previous contract class for this instance */
    prevContractClassId: Fr;
    /** Identifier of the new contract class for this instance. */
    newContractClassId: Fr;
    /** The block number where the contract class in use will be the new one */
    blockOfChange: number;
}
export type ContractInstanceUpdateWithAddress = ContractInstanceUpdate & {
    address: AztecAddress;
};
export declare const ContractInstanceUpdateSchema: z.ZodObject<{
    prevContractClassId: ZodFor<Fr>;
    newContractClassId: ZodFor<Fr>;
    blockOfChange: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    prevContractClassId: Fr;
    newContractClassId: Fr;
    blockOfChange: number;
}, {
    blockOfChange: number;
    prevContractClassId?: any;
    newContractClassId?: any;
}>;
export declare const ContractInstanceUpdateWithAddressSchema: z.ZodIntersection<z.ZodObject<{
    prevContractClassId: ZodFor<Fr>;
    newContractClassId: ZodFor<Fr>;
    blockOfChange: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    prevContractClassId: Fr;
    newContractClassId: Fr;
    blockOfChange: number;
}, {
    blockOfChange: number;
    prevContractClassId?: any;
    newContractClassId?: any;
}>, z.ZodObject<{
    address: ZodFor<AztecAddress>;
}, "strip", z.ZodTypeAny, {
    address: AztecAddress;
}, {
    address?: any;
}>>;
//# sourceMappingURL=contract_instance_update.d.ts.map