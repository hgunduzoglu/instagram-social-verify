/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { BufferReader } from '@aztec/foundation/serialize';
import type { FieldsOf } from '@aztec/foundation/types';
import { PrivateBaseRollupHints } from './base_rollup_hints.js';
import { PrivateTubeData } from './private_tube_data.js';
export declare class PrivateBaseRollupInputs {
    tubeData: PrivateTubeData;
    hints: PrivateBaseRollupHints;
    constructor(tubeData: PrivateTubeData, hints: PrivateBaseRollupHints);
    static from(fields: FieldsOf<PrivateBaseRollupInputs>): PrivateBaseRollupInputs;
    static getFields(fields: FieldsOf<PrivateBaseRollupInputs>): readonly [PrivateTubeData, PrivateBaseRollupHints];
    static fromBuffer(buffer: Buffer | BufferReader): PrivateBaseRollupInputs;
    toBuffer(): Buffer;
    static fromString(str: string): PrivateBaseRollupInputs;
    toString(): `0x${string}`;
    static empty(): PrivateBaseRollupInputs;
    /** Returns a buffer representation for JSON serialization. */
    toJSON(): Buffer;
    /** Creates an instance from a hex string. */
    static get schema(): import("zod").ZodType<PrivateBaseRollupInputs, any, string>;
}
//# sourceMappingURL=private_base_rollup_inputs.d.ts.map