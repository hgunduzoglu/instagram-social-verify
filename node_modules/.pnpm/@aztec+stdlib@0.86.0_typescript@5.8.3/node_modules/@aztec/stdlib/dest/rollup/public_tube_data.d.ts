/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { NESTED_RECURSIVE_ROLLUP_HONK_PROOF_LENGTH } from '@aztec/constants';
import { BufferReader } from '@aztec/foundation/serialize';
import { PrivateToPublicKernelCircuitPublicInputs } from '../kernel/private_to_public_kernel_circuit_public_inputs.js';
import { RecursiveProof } from '../proofs/recursive_proof.js';
import { VkWitnessData } from '../vks/vk_witness_data.js';
export declare class PublicTubeData {
    publicInputs: PrivateToPublicKernelCircuitPublicInputs;
    proof: RecursiveProof<typeof NESTED_RECURSIVE_ROLLUP_HONK_PROOF_LENGTH>;
    vkData: VkWitnessData;
    constructor(publicInputs: PrivateToPublicKernelCircuitPublicInputs, proof: RecursiveProof<typeof NESTED_RECURSIVE_ROLLUP_HONK_PROOF_LENGTH>, vkData: VkWitnessData);
    static empty(): PublicTubeData;
    static fromBuffer(buffer: Buffer | BufferReader): PublicTubeData;
    toBuffer(): Buffer;
}
//# sourceMappingURL=public_tube_data.d.ts.map