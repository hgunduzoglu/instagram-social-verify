/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import type { FieldsOf } from '@aztec/foundation/types';
import { AppendOnlyTreeSnapshot } from '../trees/append_only_tree_snapshot.js';
import { GlobalVariables } from '../tx/global_variables.js';
/**
 * Data which is forwarded through the base rollup circuits unchanged.
 */
export declare class ConstantRollupData {
    /** Archive tree snapshot at the very beginning of the entire rollup. */
    lastArchive: AppendOnlyTreeSnapshot;
    /**
     * Root of the verification key tree.
     */
    vkTreeRoot: Fr;
    /**
     * Root of the protocol contract tree.
     */
    protocolContractTreeRoot: Fr;
    /**
     * Global variables for the block
     */
    globalVariables: GlobalVariables;
    constructor(
    /** Archive tree snapshot at the very beginning of the entire rollup. */
    lastArchive: AppendOnlyTreeSnapshot, 
    /**
     * Root of the verification key tree.
     */
    vkTreeRoot: Fr, 
    /**
     * Root of the protocol contract tree.
     */
    protocolContractTreeRoot: Fr, 
    /**
     * Global variables for the block
     */
    globalVariables: GlobalVariables);
    static from(fields: FieldsOf<ConstantRollupData>): ConstantRollupData;
    static fromBuffer(buffer: Buffer | BufferReader): ConstantRollupData;
    static getFields(fields: FieldsOf<ConstantRollupData>): readonly [AppendOnlyTreeSnapshot, Fr, Fr, GlobalVariables];
    static empty(): ConstantRollupData;
    toBuffer(): Buffer;
}
//# sourceMappingURL=constant_rollup_data.d.ts.map