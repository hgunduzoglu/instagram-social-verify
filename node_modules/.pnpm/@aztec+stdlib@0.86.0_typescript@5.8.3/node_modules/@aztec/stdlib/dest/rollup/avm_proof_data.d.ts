/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { AVM_PROOF_LENGTH_IN_FIELDS } from '@aztec/constants';
import { BufferReader } from '@aztec/foundation/serialize';
import { AvmCircuitPublicInputs } from '../avm/avm_circuit_public_inputs.js';
import { RecursiveProof } from '../proofs/recursive_proof.js';
import { VkWitnessData } from '../vks/vk_witness_data.js';
export declare class AvmProofData {
    publicInputs: AvmCircuitPublicInputs;
    proof: RecursiveProof<typeof AVM_PROOF_LENGTH_IN_FIELDS>;
    vkData: VkWitnessData;
    constructor(publicInputs: AvmCircuitPublicInputs, proof: RecursiveProof<typeof AVM_PROOF_LENGTH_IN_FIELDS>, vkData: VkWitnessData);
    static fromBuffer(buffer: Buffer | BufferReader): AvmProofData;
    toBuffer(): Buffer;
    static empty(): AvmProofData;
}
//# sourceMappingURL=avm_proof_data.d.ts.map