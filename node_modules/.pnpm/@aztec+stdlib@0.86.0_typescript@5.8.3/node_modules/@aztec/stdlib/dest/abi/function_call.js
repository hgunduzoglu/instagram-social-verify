import { AztecAddress } from '../aztec-address/index.js';
import { FunctionType } from './abi.js';
import { FunctionSelector } from './function_selector.js';
/** A request to call a function on a contract from a given address. */ export class FunctionCall {
    name;
    to;
    selector;
    type;
    isStatic;
    args;
    returnTypes;
    constructor(/** The name of the function to call */ name, /** The recipient contract */ to, /** The function being called */ selector, /** Type of the function */ type, /** Whether this call can make modifications to state or not */ isStatic, /** The encoded args */ args, /** The return type for decoding */ returnTypes){
        this.name = name;
        this.to = to;
        this.selector = selector;
        this.type = type;
        this.isStatic = isStatic;
        this.args = args;
        this.returnTypes = returnTypes;
    }
    static getFields(fields) {
        return [
            fields.name,
            fields.to,
            fields.selector,
            fields.type,
            fields.isStatic,
            fields.args,
            fields.returnTypes
        ];
    }
    static from(fields) {
        return new FunctionCall(...FunctionCall.getFields(fields));
    }
    /**
   * Creates an empty function call.
   * @returns an empty function call.
   */ static empty() {
        return {
            name: '',
            to: AztecAddress.ZERO,
            selector: FunctionSelector.empty(),
            type: FunctionType.PUBLIC,
            isStatic: false,
            args: [],
            returnTypes: []
        };
    }
}
