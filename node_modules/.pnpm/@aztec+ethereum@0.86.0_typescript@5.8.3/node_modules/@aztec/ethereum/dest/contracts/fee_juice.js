import { EthAddress } from '@aztec/foundation/eth-address';
import { TestERC20Abi as FeeJuiceAbi } from '@aztec/l1-artifacts/TestERC20Abi';
import { getContract } from 'viem';
import { isExtendedClient } from '../types.js';
export class FeeJuiceContract {
    client;
    feeJuiceContract;
    constructor(address, client){
        this.client = client;
        this.feeJuiceContract = getContract({
            address,
            abi: FeeJuiceAbi,
            client
        });
    }
    get address() {
        return EthAddress.fromString(this.feeJuiceContract.address);
    }
    assertWalletFeeJuice() {
        if (!isExtendedClient(this.client)) {
            throw new Error('Wallet client is required for this operation');
        }
        return this.feeJuiceContract;
    }
    async mint(to, amount) {
        const walletFeeJuice = this.assertWalletFeeJuice();
        const tx = await walletFeeJuice.write.mint([
            to,
            amount
        ]);
        const receipt = await this.client.waitForTransactionReceipt({
            hash: tx
        });
        if (receipt.status === 'success') {
            return;
        }
        throw new Error('Mint failed');
    }
    async approve(spender, amount) {
        const walletFeeJuice = this.assertWalletFeeJuice();
        const tx = await walletFeeJuice.write.approve([
            spender,
            amount
        ]);
        const receipt = await this.client.waitForTransactionReceipt({
            hash: tx
        });
        if (receipt.status === 'success') {
            return;
        }
        throw new Error('Approve failed');
    }
}
