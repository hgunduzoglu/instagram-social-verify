import { EthAddress } from '@aztec/foundation/eth-address';
import { SlashingProposerAbi } from '@aztec/l1-artifacts/SlashingProposerAbi';
import { getContract } from 'viem';
import { encodeVote } from './empire_base.js';
export class SlashingProposerContract {
    client;
    proposer;
    constructor(client, address){
        this.client = client;
        this.proposer = getContract({
            address,
            abi: SlashingProposerAbi,
            client
        });
    }
    get address() {
        return EthAddress.fromString(this.proposer.address);
    }
    getQuorumSize() {
        return this.proposer.read.N();
    }
    getRoundSize() {
        return this.proposer.read.M();
    }
    computeRound(slot) {
        return this.proposer.read.computeRound([
            slot
        ]);
    }
    async getRoundInfo(rollupAddress, round) {
        const roundInfo = await this.proposer.read.rounds([
            rollupAddress,
            round
        ]);
        return {
            lastVote: roundInfo[0],
            leader: roundInfo[1],
            executed: roundInfo[2]
        };
    }
    createVoteRequest(payload) {
        return {
            to: this.address.toString(),
            data: encodeVote(payload)
        };
    }
}
