import { EthAddress } from '@aztec/foundation/eth-address';
import { type Hex, type TransactionReceipt } from 'viem';
import type { GasPrice, L1TxRequest, L1TxUtils } from '../l1_tx_utils.js';
import type { ViemClient } from '../types.js';
import { type IEmpireBase } from './empire_base.js';
export declare class GovernanceProposerContract implements IEmpireBase {
    readonly client: ViemClient;
    private readonly proposer;
    constructor(client: ViemClient, address: Hex);
    get address(): EthAddress;
    getRollupAddress(): Promise<EthAddress>;
    getRegistryAddress(): Promise<EthAddress>;
    getQuorumSize(): Promise<bigint>;
    getRoundSize(): Promise<bigint>;
    computeRound(slot: bigint): Promise<bigint>;
    getRoundInfo(rollupAddress: Hex, round: bigint): Promise<{
        lastVote: bigint;
        leader: Hex;
        executed: boolean;
    }>;
    getProposalVotes(rollupAddress: Hex, round: bigint, proposal: Hex): Promise<bigint>;
    createVoteRequest(payload: Hex): L1TxRequest;
    executeProposal(round: bigint, l1TxUtils: L1TxUtils): Promise<{
        receipt: TransactionReceipt;
        gasPrice: GasPrice;
        proposalId: bigint;
    }>;
}
//# sourceMappingURL=governance_proposer.d.ts.map