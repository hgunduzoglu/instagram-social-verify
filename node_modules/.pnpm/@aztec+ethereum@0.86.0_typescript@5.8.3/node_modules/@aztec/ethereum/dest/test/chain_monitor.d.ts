/// <reference types="node" resolution-mode="require"/>
import type { RollupContract } from '@aztec/ethereum/contracts';
import { EventEmitter } from 'events';
/** Utility class that polls the chain on quick intervals and logs new L1 blocks, L2 blocks, and L2 proofs. */
export declare class ChainMonitor extends EventEmitter {
    private readonly rollup;
    private logger;
    private readonly intervalMs;
    private readonly l1Client;
    private handle;
    /** Current L1 block number */
    l1BlockNumber: number;
    /** Current L2 block number */
    l2BlockNumber: number;
    /** Current L2 proven block number */
    l2ProvenBlockNumber: number;
    /** L1 timestamp for the current L2 block */
    l2BlockTimestamp: bigint;
    /** L1 timestamp for the proven L2 block */
    l2ProvenBlockTimestamp: bigint;
    constructor(rollup: RollupContract, logger?: import("@aztec/foundation/log").Logger, intervalMs?: number);
    start(): this;
    stop(): void;
    private safeRun;
    run(): Promise<void>;
}
//# sourceMappingURL=chain_monitor.d.ts.map