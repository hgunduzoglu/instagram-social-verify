import type { ConfigMappingsType } from '@aztec/foundation/config';
import { EthAddress } from '@aztec/foundation/eth-address';
import { z } from 'zod';
/**
 * The names of the current L1 contract addresses.
 * NOTE: When changing this list, make sure to update CLI & CI scripts accordingly.
 * For reference: https://github.com/AztecProtocol/aztec-packages/pull/5553
 */
export declare const L1ContractsNames: readonly ["rollupAddress", "registryAddress", "inboxAddress", "outboxAddress", "feeJuiceAddress", "feeJuicePortalAddress", "coinIssuerAddress", "rewardDistributorAddress", "governanceProposerAddress", "governanceAddress", "stakingAssetAddress"];
/** Provides the directory of current L1 contract addresses */
export type L1ContractAddresses = {
    [K in (typeof L1ContractsNames)[number]]: EthAddress;
} & {
    slashFactoryAddress?: EthAddress | undefined;
    feeAssetHandlerAddress?: EthAddress | undefined;
    stakingAssetHandlerAddress?: EthAddress | undefined;
};
export declare const L1ContractAddressesSchema: z.ZodObject<{
    rollupAddress: z.ZodType<EthAddress, any, string>;
    registryAddress: z.ZodType<EthAddress, any, string>;
    inboxAddress: z.ZodType<EthAddress, any, string>;
    outboxAddress: z.ZodType<EthAddress, any, string>;
    feeJuiceAddress: z.ZodType<EthAddress, any, string>;
    stakingAssetAddress: z.ZodType<EthAddress, any, string>;
    feeJuicePortalAddress: z.ZodType<EthAddress, any, string>;
    coinIssuerAddress: z.ZodType<EthAddress, any, string>;
    rewardDistributorAddress: z.ZodType<EthAddress, any, string>;
    governanceProposerAddress: z.ZodType<EthAddress, any, string>;
    governanceAddress: z.ZodType<EthAddress, any, string>;
    slashFactoryAddress: z.ZodOptional<z.ZodType<EthAddress, any, string>>;
    feeAssetHandlerAddress: z.ZodOptional<z.ZodType<EthAddress, any, string>>;
    stakingAssetHandlerAddress: z.ZodOptional<z.ZodType<EthAddress, any, string>>;
}, "strip", z.ZodTypeAny, {
    rollupAddress: EthAddress;
    registryAddress: EthAddress;
    inboxAddress: EthAddress;
    outboxAddress: EthAddress;
    feeJuiceAddress: EthAddress;
    feeJuicePortalAddress: EthAddress;
    coinIssuerAddress: EthAddress;
    rewardDistributorAddress: EthAddress;
    governanceProposerAddress: EthAddress;
    governanceAddress: EthAddress;
    stakingAssetAddress: EthAddress;
    slashFactoryAddress?: EthAddress | undefined;
    feeAssetHandlerAddress?: EthAddress | undefined;
    stakingAssetHandlerAddress?: EthAddress | undefined;
}, {
    rollupAddress: string;
    registryAddress: string;
    inboxAddress: string;
    outboxAddress: string;
    feeJuiceAddress: string;
    feeJuicePortalAddress: string;
    coinIssuerAddress: string;
    rewardDistributorAddress: string;
    governanceProposerAddress: string;
    governanceAddress: string;
    stakingAssetAddress: string;
    slashFactoryAddress?: string | undefined;
    feeAssetHandlerAddress?: string | undefined;
    stakingAssetHandlerAddress?: string | undefined;
}>;
export declare const l1ContractAddressesMapping: ConfigMappingsType<L1ContractAddresses>;
//# sourceMappingURL=l1_contract_addresses.d.ts.map