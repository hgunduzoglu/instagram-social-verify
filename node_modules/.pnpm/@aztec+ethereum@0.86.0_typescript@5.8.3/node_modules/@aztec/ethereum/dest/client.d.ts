import type { Logger } from '@aztec/foundation/log';
import { type Chain, type HDAccount, type LocalAccount, type PrivateKeyAccount } from 'viem';
import type { ExtendedViemWalletClient, ViemPublicClient } from './types.js';
type Config = {
    /** The RPC Url of the ethereum host. */
    l1RpcUrls: string[];
    /** The chain ID of the ethereum host. */
    l1ChainId: number;
    /** The polling interval viem uses in ms */
    viemPollingIntervalMS?: number;
};
export type { Config as EthereumClientConfig };
/** Returns a viem public client given the L1 config. */
export declare function getPublicClient(config: Config): ViemPublicClient;
/** Returns a viem public client after waiting for the L1 RPC node to become available. */
export declare function waitForPublicClient(config: Config, logger?: Logger): Promise<ViemPublicClient>;
export declare function createExtendedL1Client(rpcUrls: string[], mnemonicOrPrivateKeyOrHdAccount: string | `0x${string}` | HDAccount | PrivateKeyAccount | LocalAccount, chain?: Chain, pollingIntervalMS?: number, addressIndex?: number): ExtendedViemWalletClient;
//# sourceMappingURL=client.d.ts.map