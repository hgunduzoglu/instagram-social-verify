import type { EthAddress } from '@aztec/foundation/eth-address';
import type { Hex } from 'viem';
import type { L1ContractsConfig } from './config.js';
import type { ViemPublicClient } from './types.js';
/** Reads the L1ContractsConfig from L1 contracts. */
export declare function getL1ContractsConfig(publicClient: ViemPublicClient, addresses: {
    governanceAddress: EthAddress;
    rollupAddress?: EthAddress;
}): Promise<Omit<L1ContractsConfig, 'ethereumSlotDuration'> & {
    l1StartBlock: bigint;
    l1GenesisTime: bigint;
    rollupVersion: number;
    genesisArchiveTreeRoot: `0x${string}`;
}>;
export type L2BlockProposedEvent = {
    versionedBlobHashes: readonly Hex[];
    archive: Hex;
    blockNumber: bigint;
};
export declare function getL2BlockProposalEvents(client: ViemPublicClient, blockId: Hex, rollupAddress?: EthAddress): Promise<L2BlockProposedEvent[]>;
//# sourceMappingURL=queries.d.ts.map