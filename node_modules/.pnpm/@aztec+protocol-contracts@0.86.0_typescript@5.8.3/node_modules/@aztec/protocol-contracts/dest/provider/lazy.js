import { getCanonicalAuthRegistry } from '../auth-registry/lazy.js';
import { getCanonicalClassRegisterer } from '../class-registerer/lazy.js';
import { getCanonicalFeeJuice } from '../fee-juice/lazy.js';
import { getCanonicalInstanceDeployer } from '../instance-deployer/lazy.js';
import { getCanonicalMultiCallEntrypoint } from '../multi-call-entrypoint/lazy.js';
import { getCanonicalRouter } from '../router/lazy.js';
export class LazyProtocolContractsProvider {
    getProtocolContractArtifact(name) {
        switch(name){
            case 'AuthRegistry':
                return getCanonicalAuthRegistry();
            case 'ContractInstanceDeployer':
                return getCanonicalInstanceDeployer();
            case 'ContractClassRegisterer':
                return getCanonicalClassRegisterer();
            case 'MultiCallEntrypoint':
                return getCanonicalMultiCallEntrypoint();
            case 'FeeJuice':
                return getCanonicalFeeJuice();
            case 'Router':
                return getCanonicalRouter();
            default:
                throw new Error(`Unknown protocol contract name: ${name}`);
        }
    }
}
